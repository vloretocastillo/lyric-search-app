{"version":3,"sources":["NavBarComponent/NavBar.js","context.js","LoaderComponent/Loader.js","TrackComponent/Track.js","TracksComponent/Tracks.js","SearchComponent/Search.js","IndexComponent/Index.js","LyricsComponent/Lyrics.js","AppComponent/App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","fetch","process","then","res","json","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","Loader","Track","artist","name","title","album","id","Tracks","UIComponent","length","tracks","map","el","track","track_name","track_id","album_name","artist_name","genres","primary_genres","music_genre_list","music_genre","music_genre_name","key","Fragment","Search","e","target","preventDefault","url","onSubmit","handleSumbmit","placeholder","onChange","handleChange","autoComplete","Index","Lyrics","lyrics","getTrackInfo","match","params","getLyricsInfo","undefined","Object","keys","lyrics_body","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ae4e6c4.chunk.js","sourcesContent":["import React from 'react'\nimport './NavBar.css'\nimport { Link } from 'react-router-dom'\n\n\nconst Navbar = () => {\n\n    return (\n          <nav>\n            <div className=\"nav-wrapper teal accent-4 navbarcomponent\">\n            <Link to='/'> <h5>LyricFinder </h5></Link>\n            </div>\n        </nav>\n    )\n\n}\n\nexport default Navbar","import React from 'react';\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'SEARCH_TRACKS':\n            return {\n                ...state,\n                track_list : action.payload,\n                heading: 'Search Result'\n            }\n\n        default:\n            return state\n    }\n}\n\nexport class Provider extends React.Component {\n\n    state = {\n        track_list : [], \n        heading : 'Top 10 tracks',\n        dispatch: action => this.setState(state =>reducer(state, action))\n    }\n\n    componentDidMount() {\n        fetch(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`, {\n            \n        })\n        .then( res => res.json() )\n        .then( data => {\n            this.setState({ track_list : data.message.body.track_list })\n        })\n        .catch(err => console.log(err))\n    }\n\n\n    render () {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","\nimport React from 'react'\nimport './Loader.css'\n\nconst Loader = () => {\n\n    return (\n        <div className='loader-wrapper'>\n        <div className=\"preloader-wrapper big active\">\n            <div className=\"spinner-layer spinner-blue-only\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div>\n                <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n\n}\n\nexport default Loader\n\n","\nimport React from 'react'\nimport './Track.css';\nimport { Link } from 'react-router-dom'\n\n\n\nconst Track = (props) => {\n\n\n\n    return (\n        <div className='card-panel teal accent-4 trackcomponent-item'>\n            <h6>{ props.artist } </h6>\n            \n            <span className='icons'><ion-icon name=\"play-circle\" className=\"icon\"></ion-icon></span> Track: { props.title }\n            <br/>\n            <span className='icons'><ion-icon name=\"albums\" className=\"icon\"></ion-icon></span> Album: { props.album }\n            <br/>\n            <Link \n                to={`lyrics/track/${ props.id }`}\n                className='btn #7c4dff deep-purple accent-2 trackcomponent-button'>\n                View Lyrics\n            </Link>\n            {/* <button className='btn #7c4dff deep-purple accent-2 trackcomponent-button'><a href={ `http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${ props.id }&apikey=${process.env.REACT_APP_MM_KEY}` }></a>View Lyrics</button> */}\n        </div>\n    )\n\n}\n\nexport default Track\n\n                {/* to={`http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${ props.id }&apikey=${process.env.REACT_APP_MM_KEY}`}  */}\n","import React from 'react';\nimport { Consumer } from '../context';\nimport Loader from '../LoaderComponent/Loader';\nimport Track from '../TrackComponent/Track';\nimport './Tracks.css';\n\n\n\n\nclass Tracks extends React.Component {\n\n\n    render () {\n        return (\n            <Consumer>\n            { (value) => {\n                let { track_list, heading } = value\n                let UIComponent\n                if (track_list.length === 0) {\n                    UIComponent = <Loader />\n                } else {\n                    let tracks = track_list.map(el => {\n                        {/* let { track } = el */}\n                        let {track_name, track_id, album_name, artist_name, primary_genres } = el.track\n                        let { music_genre_list } = primary_genres\n                        let genres = music_genre_list.map(el => el.music_genre.music_genre_name )\n                        {/* console.log(track, genres) */}\n                        return <Track key={track_id} id={track_id} title={ track_name } album={ album_name } artist={ artist_name } genres={ genres }/>\n                    })\n\n                    UIComponent = (\n                        <div className='trackscomponent-container'>\n                            <h2>{ heading }</h2>\n                            {tracks}\n                        </div>\n                    )\n                }\n                \n                \n                return (\n                    <React.Fragment>\n                        {UIComponent}\n                    </React.Fragment>\n                )\n            } }\n            </Consumer>\n        )\n    }\n}\n\nexport default Tracks;\n","import React from 'react';\nimport './Search.css';\nimport { Consumer } from '../context';\n\n\n\nclass Search extends React.Component { \n\n    state = {\n        title : ''\n    }\n\n    handleChange(e) {\n        this.setState({ title: e.target.value})\n    }\n\n    handleSumbmit(e, dispatch) {\n        e.preventDefault();\n\n        let url = `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${ this.state.title }&apikey=${process.env.REACT_APP_MM_KEY}`\n        fetch(url)\n            .then( res => res.json() )\n            .then( data => {\n                dispatch({\n                    type: 'SEARCH_TRACKS',\n                    payload: data.message.body.track_list\n                })\n                this.setState({title : ''})\n            })\n            .catch(err => console.log(err))\n    }\n\n    \n    render () {\n        return (\n            <Consumer>\n            { (value) => {\n                return (\n                    <div className='input-wrapper'>\n                        <form action=\"\" onSubmit={ (e)=> this.handleSumbmit(e, value.dispatch) }>\n                        <input \n                            type=\"text\" \n                            id=\"input\" \n                            className=\"input-track-title\" \n                            placeholder=\"Search By Track Title\" \n                            name='title' \n                            value={this.state.title}\n                            onChange={ (e) => this.handleChange(e) }\n                            autoComplete=\"off\"\n                        />\n                        </form>\n                    </div>\n                )\n            }}\n            </Consumer>\n        )\n    }\n\n}\n\nexport default Search;\n","import React from 'react'\nimport Tracks from '../TracksComponent/Tracks'\nimport Search from '../SearchComponent/Search'\n\n\nconst Index = () => {\n\n    return (\n        <div>\n            <Search/>\n            <Tracks/>\n        </div>\n    )\n\n}\n\nexport default Index\n","import React from 'react';\nimport Loader from '../LoaderComponent/Loader';\nimport './Lyrics.css'\nimport { Link } from 'react-router-dom'\n\n\nclass Lyrics extends React.Component {\n    state = {\n        track: {},\n        lyrics: {}\n    }\n\n    getTrackInfo = () => {\n        let url = `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.get?track_id=${ this.props.match.params.id }&apikey=${process.env.REACT_APP_MM_KEY}`\n        fetch(url)\n        .then( res => res.json() )\n        .then( data => { this.setState({ track : data.message.body.track }) })\n        .catch(err => console.log(err))\n    }\n\n    getLyricsInfo = () => {\n        let url = `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${ this.props.match.params.id }&apikey=${process.env.REACT_APP_MM_KEY}`\n        fetch(url)\n        .then( res => res.json() )\n        .then( data => { this.setState({ lyrics : data.message.body.lyrics }) })\n        .catch(err => console.log(err))\n    }\n\n    componentDidMount() {\n        this.getLyricsInfo()\n        this.getTrackInfo()\n    }\n\n    render () {\n\n        const { track, lyrics } = this.state\n        let UIComponent\n        if( track === undefined || lyrics === undefined || Object.keys(track).length === 0 || Object.keys(lyrics).length === 0) {\n            UIComponent = <Loader />\n        }\n        else {\n            console.log(track)\n            UIComponent = (\n                \n\n            <div className='card-panel teal accent-4 lyriccomponent-item'>\n                <h6>{ track.track_name } by { track.artist_name }</h6>\n\n                <p>{lyrics.lyrics_body}</p>\n                {/* <span className='icons'><ion-icon name=\"play-circle\" className=\"icon\"></ion-icon></span> Track: { props.title }\n                <br/>\n                <span className='icons'><ion-icon name=\"albums\" className=\"icon\"></ion-icon></span> Album: { props.album }\n                <br/> */}\n            \n            </div>\n            )\n        }\n\n        return (\n            <div className='lyricscomponent-container'>\n                <Link \n                    to='/'\n                    className='btn #7c4dff deep-purple accent-2 '>\n                    Go Back\n                </Link> \n                {UIComponent}\n            </div>\n        )\n    }\n}\n\nexport default Lyrics","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport NavBar from '../NavBarComponent/NavBar'\nimport Index from '../IndexComponent/Index'\nimport Lyrics from '../LyricsComponent/Lyrics'\nimport { Provider } from '../context'\n\nfunction App() {\n  return (\n    <Provider>\n    <Router>\n    <div className=\"App\">\n      <NavBar />\n      <div className='container'>\n        <Switch>\n          <Route exact path='/' component={Index} />\n          <Route exact path='/lyric-search-app/' component={Index} />\n\n          <Route exact path='/lyrics/track/:id' component={Lyrics} />\n\n        </Switch>\n      </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './AppComponent/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}